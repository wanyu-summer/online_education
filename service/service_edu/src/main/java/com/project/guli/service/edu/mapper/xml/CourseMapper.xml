<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.guli.service.edu.mapper.CourseMapper">

    <!--    主体部分即select语句-->
    <!--    可以将select部分抽取出来-->
    <sql id="columns">
        c.id,
            c.title,
            c.lesson_num AS lessonNum,
            c.price,
            c.cover,
            c.buy_count buyCount,
            c.view_count viewCount,
            c.status,
            c.gmt_create gmtCreate,
            t.name teacherName,
            s1.title subjectParentTitle,
            s2.title subjectTitle
    </sql>

    <sql id="tables">
        edu_course c
        left join edu_teacher t on c.teacher_id=t.id
        left join edu_subject s1 on c.subject_parent_id=s1.id
        left join edu_subject s2 on c.subject_id=s2.id
    </sql>

    <select id="selectPageByCourseQueryVo" resultType="com.project.guli.service.edu.entity.vo.CourseVo">
        select
        <include refid="columns"></include>
        from
        <include refid="tables"></include>
        ${ew.customSqlSegment}
    </select>
<!--    ew代表queryWrapper 取出属性customSQLSegment实现自动拼接，在from后自动加上where条件-->
    <select id="selectCoursePublishVoById" resultType="com.project.guli.service.edu.entity.vo.CoursePublishVo">
        select
        c.id,
        c.title,
        c.lesson_num lessonNum,
        c.price,
        c.cover,
        t.name teacherName,
        s1.title subjectParentTitle,
        s2.title subjectTitle
        from
        <include refid="tables"></include>
        where c.id=#{id}
    </select>
    <select id="selectWebCourseVoById" resultType="com.project.guli.service.edu.entity.vo.WebCourseVo">
        SELECT
        c.id,
        c.title,
        c.cover,
        CONVERT(c.price, DECIMAL(8,2)) AS price,
        c.lesson_num AS lessonNum,
        c.buy_count AS buyCount,
        c.view_count AS viewCount,
        cd.description,

        t.id AS teacherId,
        t.name AS teacherName,
        t.intro,
        t.avatar,

        s1.id AS subjectLevelOneId,
        s1.title AS subjectLevelOne,
        s2.id AS subjectLevelTwoId,
        s2.title AS subjectLevelTwo

        FROM
        edu_course c
        LEFT JOIN edu_course_description cd ON c.id = cd.id
        LEFT JOIN edu_teacher t ON c.teacher_id = t.id
        LEFT JOIN edu_subject s1 ON c.subject_parent_id = s1.id
        LEFT JOIN edu_subject s2 ON c.subject_id = s2.id
        WHERE
        c.id = #{id}
    </select>
    <select id="selectCourseDtoById" resultType="com.project.guli.service.base.dto.CourseDto">
        select
        c.id,
        c.cover,
        c.title,
        CONVERT(c.price,DECIMAL (8,2)) AS price,
        t.name AS teacherName

        FROM
        edu_course c
        LEFT JOIN edu_teacher t on c.teacher_id=t.id
        WHERE
        c.id=#{id}
    </select>


</mapper>
